AI EcoTrack – Challenges Faced


Throughout the EcoTrack project, I faced several issues that slowed me down, especially in the early stages. From dataset inconsistencies to deployment errors, every step had at least one small blocker. But each of them taught me something. Here’s a summary of the problems I ran into and how I got through them, written as clearly and honestly as I can.
The first issue came up almost immediately after downloading the dataset. Only two folders, plastic and trash,  had images, while the others were empty. At first, I thought something was wrong with the dataset itself, but it turned out that the download hadn't finished properly. I had already started working with the data before the full download completed, which led to errors like `IndexError` and `NotADirectoryError`. Once I realized what was happening, I waited for the complete dataset and revalidated the folders. From there, the errors disappeared.
Later, I encountered a `NotADirectoryError` again, but this time it was because of system files like `.DS_Store` that were inside the image folders. These aren't visible by default, but they cause problems when you're trying to loop through directories assuming every item is a folder. I fixed this by writing a check that skips over anything that isn’t a directory. That one small change saved a lot of time in the long run.
When I was working in Colab, another strange issue popped up. Even after correcting the dataset in my Google Drive, the Colab notebook still showed missing or empty folders. It was a simple fix in the end, I just had to remount the drive using `force_remount=True`. It sounds small now, but at the time, it had me stuck for a while.
During integration, I hit a `FileNotFoundError` while trying to load the model. The path seemed right, but the file just wasn’t found. Eventually, I realized that the filename in my code didn’t match the actual model file I had trained and saved. I either renamed the model file or updated the code depending on the case. A lot of these mistakes happened because I assumed something existed when it didn’t , lesson learned.
Another important issue happened during deployment. When I tried pushing the `.h5` model file to GitHub, the push failed because the file was over 100MB. GitHub doesn’t allow large files unless you use Git LFS. I installed Git LFS and tracked the model file with it. Once that was done, the push worked smoothly.
At one point, I mistakenly copied my full project folder, which was already a Git repo ,into the Hugging Face repo folder. Git gave me a warning about a nested repository, which I hadn’t dealt with before. I used `git rm --cached` to remove the inner repo from tracking and then copied only the contents, not the folder itself. That resolved it cleanly.
When working with the MobileNetV2 version of the app, I forgot to change the model path in `predict.py`. So the app was still looking for the CNN model. This led to the same `FileNotFoundError`. Once I updated the path to point to the MobileNetV2 model, everything worked as expected.
Streamlit Cloud gave its own set of surprises. The first few attempts to launch the app failed because the entry point wasn’t set properly. I made sure the main file was inside the `app/` folder and named it `streamlit_app.py`. After that, the app launched correctly.
Overall, every issue, whether it looked big or small, ended up teaching me something useful. Most of them were not bugs in the model itself, but mistakes in structure, file management, or deployment setup. Fixing them required a mix of patience and trial-and-error, but I’m glad I stuck through each one.
